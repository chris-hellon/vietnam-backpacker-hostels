const $dropdown = $(".dropdown"), $dropdownToggle = $(".dropdown-toggle"), $dropdownMenu = $(".dropdown-menu"), showClass = "show"; let $windowWidth = null; $(window).on("beforeunload", function () { showLoader() }), $(window).on("load resize", function () { ($windowWidth = $(this).width()) > 992 ? $dropdown.hover(function () { let e = $(this); e.addClass(showClass), e.find($dropdownToggle).attr("aria-expanded", "true"), e.find($dropdownMenu).addClass(showClass) }, function () { let e = $(this); e.removeClass(showClass), e.find($dropdownToggle).attr("aria-expanded", "false"), e.find($dropdownMenu).removeClass(showClass) }) : $dropdown.off("mouseenter mouseleave") }), $(window).on("scroll", function () { $(".navbar").hasClass("always-shadow") || ($(this).scrollTop() > 86 ? $(".fixed-top").addClass("shadow") : $(".navbar-collapse").hasClass("show") || $(".fixed-top").removeClass("shadow")) }), $(window).on("load", function () { $windowWidth = $(this).width(), configureDatepickers(), setParallax(), window.setTimeout(function () { $(".navbar").hasClass("always-shadow") || ($(this).scrollTop() > 86 ? $(".fixed-top").addClass("shadow") : $(".navbar-collapse").hasClass("show") || $(".fixed-top").removeClass("shadow")) }, 500); window.location.href.indexOf("book-a-bed") > -1 || hideLoader(), $(".navbar-toggler").on("click", function () { $windowWidth < 992 && (86 > $(window).scrollTop() && !$(".fixed-top").hasClass("shadow") ? $(".fixed-top").addClass("shadow") : 86 > $(window).scrollTop() && $(".fixed-top").removeClass("shadow")) }), $("#check-availability-button").on("click", function (e) { validateBookingSelection(e) }), $('.nav-link[data-mdb-toggle="pill"]').on("click", function () { $(".tab-pane input[type=text], .tab-pane input[type=email], .tab-pane input[type=password], .tab-pane select").removeClass("active").val("").trigger("blur"), $(".field-validation-error").removeClass("field-validation-error").addClass("field-validation-valid").find("span").remove() }), $("form").submit(function (e) { let a = $(this); if (void 0 != e.originalEvent) { let t = $(e.originalEvent.submitter).attr("formnovalidate"); if (void 0 !== t && !1 !== t) return showLoader(), !0 } let o = a.valid(); if (!(o = validateSelectElements(a, o))) return !1; showLoader() }), $("#booking-register-form input").keypress(e => { 13 === e.which && $("#submit-booking-registration-button").trigger("click") }), $(".select").on("change", function () { validateSelectElement($(this)) }), Cookie.showModalNewUser("cookiesModal") }), Date.prototype.addDays = function (e) { var a = new Date(this.valueOf()); return a.setDate(a.getDate() + e), a }; var showLoader = function () { $(".pre-loader").show(), $("html").addClass("no-scrollbar") }, hideLoader = function () { $("html").removeClass("no-scrollbar"), $(".pre-loader").hide() }, configureDatepickers = function () { $(".datepicker-disable-future").each(function () { new mdb.Datepicker(this, { disableFuture: !0, toggleButton: !1 }) }), $(".datepicker-disable-past").each(function () { new mdb.Datepicker(this, { disablePast: !0, toggleButton: !1 }), this.addEventListener("dateChange.mdb.datepicker", e => { let a = e.srcElement.children[0].id, t = e.date; if ("CheckInDate" == a) { let o = t.addDays(1), n = document.getElementById("CheckOutDatePicker"), i = mdb.Datepicker.getInstance(n); i && (i.dispose(), i = new mdb.Datepicker(n, { disablePast: !0, toggleButton: !1, min: o, startDate: o })) } else if ("CheckOutDate" == a) { let l = document.getElementById("CheckInDatePicker"), s = mdb.Datepicker.getInstance(l); s && (s.dispose(), s = new mdb.Datepicker(l, { disablePast: !0, toggleButton: !1, max: t })) } }) }) }, validateBookingSelection = function (e) { let a = [$("#Id"), $("#CheckInDate"), $("#CheckOutDate")], t = !0; return $(a).each(function () { $(this).valid() || (t = !1); let e = $(this).attr("id"), a = $("#" + e).val(); $("#LoginInput_" + e).val(a), $("#RegisterInput_" + e).val(a), $(this).hasClass("select") && !validateSelectElement($(this)) && t && (t = !1) }), t ? $("#book-now-sign-in-modal").modal("show") : e.preventDefault(), t }, validateSelectElements = function (e, a) { let t = e.find(".select"); return t.length > 0 && t.each(function (e, t) { !validateSelectElement(t) && a && (a = !1) }), a }, validateSelectElement = function (e) { let a = $(e).val(), t = $(e).data("val-required"), o = $(e).attr("name"); var n = $('span[data-valmsg-for="' + o + '"]'); return null == a || 0 == a.length ? (n.removeClass("field-validation-valid").addClass("field-validation-error").html('<span id="' + o + '-error" class="">' + t + "</span>"), !1) : (n.removeClass("field-validation-error").addClass("field-validation-valid").html(""), !0) }, setParallax = function () { $(".parallax[data-mdb-image-src]").each(function () { let e = $(this).data("mdb-image-src"); $(this).css("background-image", "url(" + e + ")") }) }, scrollToElement = function (e, a = !1) { document.querySelector(e).scrollIntoView({ behavior: "smooth", block: "end" }), a && window.setTimeout(function () { let a = document.getElementById(e.replace("#", "")), t = "pulse", o = new mdb.Animate(a, { animation: t, animationStart: "onLoad", animationDuration: 1e3, animationRepeat: !1 }); o.init(), o.stopAnimation(), o.changeAnimationType(t), o.startAnimation() }, 500) };